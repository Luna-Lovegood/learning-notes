# -- coding: utf-8 --

# 关键字（Keywords）
# and  与，且
# del  del用于list列表操作，删除一个或者连续几个元素。
# from  通过from...import来导入相应的模块
# not  非
# while  while语句允许你重复执行一块语句。while语句是所谓 循环 语句的一个例子。while语句有一个可选的else从句。
# as  结合with使用
# elif  结合if语句使用
# global  用于定义全局变量
# or  或
# with  with是python2.5以后才有的，它实质是一个控制流语句，with可以用来简化try-finally语句。
#       它的主要用法是实现一个类__enter__（）和__exit__()方法
# assert  断言，这个关键字用来在运行中检查程序的正确性，和很多其他语言是一样的作用。
# else  结合if语句使用
# if  if语句用来检验一个条件，如果条件为真，运行一块语句（称为 if-块 ），否则处理另外一块语句（称为 else-块）。else从句是可选的。
# pass  pass的意思是什么都不要做，作用是为了弥补语法和空定义上的冲突，我理解他的好处体现在代码的编写过程之中，比如你可以先写好软件的整个框架，
#       然后再填好框架内具体函数和class的内容，如果没有pass编译器会报一堆的错误，让整个开发过程很不流畅。
# yield  yield是关键字， 用起来像return，yield在告诉程序，要求函数返回一个生成器。
# break  break语句是用来 终止 循环语句的，即哪怕循环条件没有称为False或序列还没有被完全递归，也停止执行循环语句。
#        一个重要的注释是，如果你从for或while循环中 终止，任何对应的循环else块将不执行。
# except   使用try和except语句来捕获异常
# import  用import或者from...import来导入相应的模块
# print  打印
# class  定义类的关键字
# exec  exec语句用来执行储存在字符串或文件中的Python语句。例如，我们可以在运行时生成一个包含Python代码的字符串，然后使用exec语句
#       执行这些语句。
# in  for..in是另外一个循环语句，它在一序列的对象上 递归 即逐一使用队列中的每个项目
# raise  和java中的throw很类似，都是抛出异常。
# continue  continue语句被用来告诉Python跳过当前循环块中的剩余语句，然后 继续 进行下一轮循环。
# finally  用于异常处理，始终执行的模块。
# is  Python中的对象包含三要素：id、type、value。其中id用来唯一标识一个对象，type标识对象的类型，value是对象的值。
#     is判断的是a对象是否就是b对象，是通过id来判断的；==判断的是a对象的值是否和b对象的值相等，是通过value来判断的。
# return  从一个函数返回，跳出函数
# def  用于定义函数
# for  for..in是另外一个循环语句，它在一序列的对象上 递归 即逐一使用队列中的每个项目
# lambda  匿名函数，提升了代码的简洁程度，例如 g = lambda x: x*2
# try  可以使用try..except语句来处理异常。我们把通常的语句放在try-块中，而把我们的错误处理语句放在except-块中。


# 数据类型
# True  布尔类型值，真
# False  布尔类型值，假
# None  一个特殊的常量。和False不同，不是0，不是空字符串。None和任何其他的数据类型比较永远返回False。其数据类型为NoneType。
#       你可以将None复制给任何变量，但是你不能创建其他NoneType对象。
# strings  字符串
# numbers  数
# floats  浮点数
# lists 列表


# 字符串转义序列
# \\
# \'
# \"
# \a
# \b
# \f
# \n
# \r
# \t
# \v
# \000  终止符，\000后的字符串全部忽略


# 字符串格式化
# %b  二进制整数
# %d  十进制有符号整数
# %i  十进制有符号整数
# %o  八进制无符号整数
# %u  十进制无符号整数
# %x  十六进制无符号整数，字母小写
# %X  十六进制无符号整数，字母大写
# %f  浮点数
# %e  浮点数，科学计数法，底为e
# %E  指数，底为E
# %g  指数(e)或浮点数，根据值的大小决定使用%f活%e
# %G  指数(E)或浮点数，根据值的大小决定使用%f活%e
# %c  单个字符
# %r  任意格式的脚本内容
# %s  字符串
# %%  字符"%"


# 操作符号
# +  加
# -  减
# *  乘
# **  幂，指数
# /  除以
# //  地板除--操作数的除法，如9//2 =  4 而 9.0//2.0 = 4.0
# %  模
# <  小于
# >  大于
# <=  小于或等于
# >=  大于或等于
# ==  等于
# !=  不等于
# <>  不等于
# ()
# []
# {}
# @
# ,
# :
# .
# =  赋值
# ;
# +=
# -=
# *=
# /=
# //=
# %=
# **=
